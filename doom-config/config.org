#+TITLE: Emacs Configuration

* TODO Table of Contents

* Lexical binding
Turn on lexical binding for the init file

#+begin_src emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-
#+end_src

* User Interface
Clean up Emacsâ€™ user interface, make it more minimal.

#+begin_src emacs-lisp
  (setq default-frame-alist '((undecorated . t)))
#+end_src

* Personal information
Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets. It is optional.

#+begin_src emacs-lisp
  (setq user-full-name "Adam Nord"
        user-mail-address "adam.nord04@gmail.com")
#+end_src

* Fonts
Doom exposes five (optional) variables for controlling fonts in Doom:

- `doom-font' -- the primary font to use
- `doom-variable-pitch-font' -- a non-monospace font (where applicable)
- `doom-big-font' -- used for `doom-big-font-mode'; use this for
  presentations or streaming.
- `doom-unicode-font' -- for unicode glyphs
- `doom-serif-font' -- for the `fixed-pitch-serif' face

  See 'C-h v doom-font' for documentation and more examples of what they
  accept. For example:

#+begin_src emacs-lisp
  (setq doom-font (font-spec :family "JetBrains Mono" :size 15)
        doom-variable-pitch-font (font-spec :family "Iosevka Aile" :size 13)
        doom-big-font (font-spec :family "Iosevka Aile" :size 24))
#+end_src

* Theming
There are two ways to load a theme. Both assume the theme is installed and
available. You can either set `doom-theme' or manually load a theme with the
`load-theme' function. This is the default:

#+begin_src emacs-lisp
  (load-theme 'doom-one t)
#+end_src

* Evil-mode QOLs
Sets line-numbers to relative

#+begin_src emacs-lisp
  (setq display-line-numbers-type 'relative)
#+end_src

* Org
Set org directory

#+begin_src emacs-lisp
  (setq org-directory "~/org/")
#+end_src


* Configuring packages
Whenever you reconfigure a package, make sure to wrap your config in an
`after!' block, otherwise Doom's defaults may override your settings. E.g.

  (after! PACKAGE
    (setq x y))

The exceptions to this rule:

  - Setting file/directory variables (like `org-directory')
  - Setting variables which explicitly tell you to set them before their
    package is loaded (see 'C-h v VARIABLE' to look up their documentation).
  - Setting doom variables (which start with 'doom-' or '+').

Here are some additional functions/macros that will help you configure Doom.

- `load!' for loading external *.el files relative to this one
- `use-package!' for configuring packages
- `after!' for running code after a package has loaded
- `add-load-path!' for adding directories to the `load-path', relative to
  this file. Emacs searches the `load-path' when you load packages with
  `require' or `use-package'.
- `map!' for binding new keys

To get information about any of these functions/macros, move the cursor over
the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
This will open documentation for it, including demos of how they are used.
Alternatively, use `C-h o' to look up a symbol (functions, variables, faces,
etc).

You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
they are implemented.
